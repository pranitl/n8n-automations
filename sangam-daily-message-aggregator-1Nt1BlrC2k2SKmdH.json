{"createdAt":"2025-07-08T19:49:48.732Z","updatedAt":"2025-07-08T20:42:41.000Z","id":"1Nt1BlrC2k2SKmdH","name":"Sangam Daily Message Aggregator","active":true,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-960,-600],"id":"832f6a74-74a8-4ad8-9c81-95c7b061e1cb","name":"Schedule Trigger"},{"parameters":{"documentId":{"__rl":true,"value":"15uGSXmBpAOT9esQ_tFsvVPufo69w9uS92LyS2J4sur0","mode":"list","cachedResultName":"Sangam SMS Agent","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15uGSXmBpAOT9esQ_tFsvVPufo69w9uS92LyS2J4sur0/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"holding","cachedResultUrl":"https://docs.google.com/spreadsheets/d/15uGSXmBpAOT9esQ_tFsvVPufo69w9uS92LyS2J4sur0/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-760,-600],"id":"adc6be12-1966-49a3-bbcb-9824043868b5","name":"Google Sheets Read","credentials":{"googleSheetsOAuth2Api":{"id":"6Nnli6gRQZAXdz5i","name":"Google Sheets account"}}},{"parameters":{"jsCode":"const now = new Date();\nconst last24h = new Date(now.getTime() - 24 * 60 * 60 * 1000); // 24 hours ago\n\nconst conversations = {};\n\nfor (const item of items) {\n  const dateStr = item.json.Date;\n  const from = item.json.From || \"Unknown\";\n  const msg = item.json.Message;\n\n  const parsedDate = new Date(dateStr);\n\n  if (!isNaN(parsedDate.getTime()) && parsedDate >= last24h && parsedDate <= now) {\n    if (!conversations[from]) {\n      conversations[from] = [];\n    }\n    conversations[from].push(msg);\n  }\n}\n\nreturn [\n  {\n    json: {\n      conversations,\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-600,-600],"id":"db490c14-8f65-4a19-b9cb-3827c91d2cea","name":"Group by Person"},{"parameters":{"promptType":"define","text":"=You are a helpful assistant that summarizes tenant messages for a property manager. Focus on identifying key issues, maintenance requests, complaints, or important communications that require follow-up action.\n\nSummarize the following messages from the last 24 hours. Create a concise summary that captures the key issues, requests, or topics discussed. Provide a brief summary in 2-3 sentences that would be useful for a property manager to understand what this tenant needs attention for.\n\nThen, include a clear transcript of the messages grouped by sender (tenant), using the format:\n\n[Sender Name]\n- message 1\n- message 2\n\nHere are the messages:\n\n{{ JSON.stringify($json.conversations, null, 2) }}\n","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[-80,-600],"id":"c6e96619-5431-43f1-8868-7d3451f5a53d","name":"AI Summarizer"},{"parameters":{"jsCode":"// Extract AI output and conversation threads\nlet summaryRaw = items[0].json.output || 'No summary available';\nconst conversations = items[0].json.conversations || {};\nconst currentDate = new Date().toLocaleDateString('en-US', { \n  weekday: 'long', \n  year: 'numeric', \n  month: 'long', \n  day: 'numeric' \n});\n\n// Strip markdown bold from summary (for plain text and HTML)\nconst summaryText = summaryRaw.replace(/\\*\\*(.*?)\\*\\*/g, '$1');\n\n// Format summary as HTML (with paragraph and line breaks)\nconst summaryHtml = summaryText\n  .replace(/\\n\\n/g, '</p><p>')\n  .replace(/\\n/g, '<br>');\n\n// Format transcript as HTML\nlet transcriptHtml = '';\nfor (const [sender, messages] of Object.entries(conversations)) {\n  transcriptHtml += `<p><strong>${sender}</strong><br>`;\n  messages.forEach(msg => {\n    transcriptHtml += `- ${msg}<br>`;\n  });\n  transcriptHtml += `</p>`;\n}\n\n// Format transcript as plain text\nlet transcriptText = '';\nfor (const [sender, messages] of Object.entries(conversations)) {\n  transcriptText += `\\n[${sender}]\\n`;\n  messages.forEach(msg => {\n    transcriptText += `- ${msg}\\n`;\n  });\n}\n\n// Final HTML email (NO duplicate \"Messages Transcript\" block)\nconst htmlContent = `\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; margin: 20px; }\n    .header { background-color: #f4f4f4; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\n    .summary-text { margin-top: 10px; line-height: 1.5; }\n    .footer { margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px; }\n  </style>\n</head>\n<body>\n  <div class=\"header\">\n    <h1>Daily SMS Summary Report</h1>\n    <p><strong>Date:</strong> ${currentDate}</p>\n  </div>\n\n  <div class=\"summary-text\">\n    <p>${summaryHtml}</p>\n  </div>\n\n  <div class=\"footer\">\n    <p>This report was automatically generated by your n8n SMS monitoring system.</p>\n  </div>\n</body>\n</html>\n`;\n\n// Final plain text email (NO duplicate \"Messages Transcript\" block)\nconst textContent = `\nDaily SMS Summary Report - ${currentDate}\n=========================================\n\n${summaryText}\n\nThis report was automatically generated by your n8n SMS monitoring system.\n`;\n\nreturn [{\n  json: {\n    htmlContent,\n    textContent,\n    subject: `Daily SMS Summary - ${currentDate}`\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[380,-600],"id":"21478c63-b316-4750-ac98-b7024170a92c","name":"Prepare Email"},{"parameters":{"resource":"message","subject":"={{ $json.subject }}","includeHtml":true,"htmlMessage":"={{ $json.htmlContent }}","message":"=","toList":["pran.junk1@gmail.com"],"additionalFields":{}},"type":"n8n-nodes-base.gmail","typeVersion":1,"position":[880,-600],"id":"47cf6aaf-c6b1-401e-bc70-c2af41748e5e","name":"Gmail Send","credentials":{"gmailOAuth2":{"id":"nDkJT0hQw61bzi1Q","name":"Gmail account"}}},{"parameters":{"model":"openai/gpt-4o-mini","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[-20,-380],"id":"fe7256df-812d-497a-9592-57271ce2af63","name":"OpenRouter Chat Model","credentials":{"openRouterApi":{"id":"B8JTIrGoqbbInPF7","name":"OpenRouter account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e356e719-1621-4cc3-9ad4-6e7c077eed34","leftValue":"={{ Object.values($json.conversations || {}).flat().length }}","rightValue":0,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-380,-600],"id":"90a8e3ec-08a2-4c91-9228-1d412b606340","name":"If"}],"connections":{"Schedule Trigger":{"main":[[{"node":"Google Sheets Read","type":"main","index":0}]]},"Google Sheets Read":{"main":[[{"node":"Group by Person","type":"main","index":0}]]},"Group by Person":{"main":[[{"node":"If","type":"main","index":0}]]},"AI Summarizer":{"main":[[{"node":"Prepare Email","type":"main","index":0}]]},"Prepare Email":{"main":[[{"node":"Gmail Send","type":"main","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"AI Summarizer","type":"ai_languageModel","index":0}]]},"If":{"main":[[{"node":"AI Summarizer","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{"AI Summarizer":[{"json":{"output":"**Summary:** Tenant Sangam has requested urgent maintenance for a broken faucet and has also asked for pest control services. Additionally, there seems to be a message about rent that may require follow-up.\n\n**Messages:**\n\n[Sangam]\n- Send rent bitch\n- Hi, my faucet is broken. Can you send someone to fix it\n- Pls send pest control\n\n[pranitl]\n- test\n\n[Unknown]\n- /start"}}]},"versionId":"8e154ddc-a631-4e50-83b9-bc590841b8f6","triggerCount":1,"tags":[]}