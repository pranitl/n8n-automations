{"createdAt":"2025-07-18T21:43:38.976Z","updatedAt":"2025-07-19T21:35:01.000Z","id":"DLTS9AQkEwrqK78T","name":"Backup to Github","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"893ed65e-ba83-4d87-8e78-9e02bb3ca447","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[352,512],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"2301ef1e-9b25-4a6c-adc4-f2664d32af93","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-128,896],"typeVersion":1},{"parameters":{},"id":"febdb0f3-a91b-4921-9cf7-18d255dea1ff","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-64,1280],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"9266e20f-2a0f-46f8-95d7-77ff304e324a","name":"n8n","type":"n8n-nodes-base.n8n","position":[752,624],"typeVersion":1,"credentials":{"n8nApi":{"id":"RTeAluviMA3aVlA9","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"e65e5b80-495f-42fc-bf01-4b73ba5d56b3","name":"Return","type":"n8n-nodes-base.set","position":[1600,1104],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"8a09709c-fae1-4817-ae8b-3f0a8a2c1d5f","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[560,976],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"1e0d6c18-5e56-4995-8873-4bcaeadffe30","name":"If file too large","type":"n8n-nodes-base.if","position":[320,992],"typeVersion":2},{"parameters":{},"id":"7c00fa3a-b6cf-4fc4-aa88-0350b00917c0","name":"Merge Items","type":"n8n-nodes-base.merge","position":[320,1264],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"97ba2853-ff60-4e2e-9344-0426d0e7627d","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[512,1264],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"24fa4ac8-6b43-45e0-9d48-9392abc839c5","name":"Check Status","type":"n8n-nodes-base.switch","position":[912,1264],"typeVersion":1},{"parameters":{},"id":"1212f04e-cd88-4bc5-9bd8-40aeeedec338","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1136,1104],"typeVersion":1},{"parameters":{},"id":"1cdf06ac-bc58-4b6c-a095-dec71aaf6602","name":"File is different","type":"n8n-nodes-base.noOp","position":[1136,1264],"typeVersion":1},{"parameters":{},"id":"f1bfc068-b51f-4a58-8b11-2404fea175f0","name":"File is new","type":"n8n-nodes-base.noOp","position":[1136,1456],"typeVersion":1},{"parameters":{"authentication":"oAuth2","resource":"file","owner":{"__rl":true,"value":"={{ $('Config').item.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config').item.repo_name }}","mode":""},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"711fd474-5933-4172-9cc1-8cffecd224bd","name":"Create new file","type":"n8n-nodes-base.github","position":[1360,1456],"typeVersion":1,"webhookId":"793c9710-468d-446f-800e-dd9c9d3fdddc","credentials":{"githubOAuth2Api":{"id":"RHPhWd98dwLBsbWA","name":"GitHub account"}}},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"edit","owner":{"__rl":true,"value":"={{ $('Config').item.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config').item.repo_name }}","mode":""},"filePath":"={{ $('Config').item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"8bc8215d-3c3d-4540-a296-f1df41d2f7d0","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1360,1264],"typeVersion":1,"webhookId":"7f7ecb2a-6419-496e-9322-fe3f1022226a","credentials":{"githubOAuth2Api":{"id":"RHPhWd98dwLBsbWA","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"ce0b8340-6611-4c4d-8c9a-5a7abefb3f7f","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[960,624],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"d824d687-0132-4f90-8bde-172a45c6b6c8","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[352,720],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"6aeaae94-c6f6-48fe-a78e-f550415371f3","name":"Create sub path","type":"n8n-nodes-base.set","position":[720,1264],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"32525d6a-f3d1-4123-80d6-1570b771e6e5","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[-128,432],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"0a194649-0be4-436d-8dd9-c631d9ec44a1","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[320,432],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"4a3bcf83-f3a0-4b06-aae4-afd5832a381d","name":"Starting Message","type":"n8n-nodes-base.slack","position":[592,624],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2,"disabled":true},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"16065ecd-9077-4d78-9235-ce9f648e68d3","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1184,640],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"b2fb025b-0102-4d03-9044-e956b74587dc","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1184,464],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2,"disabled":true},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"2cd5ed8d-bdee-4d5e-bdda-03016f5a5752","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1376,656],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2,"disabled":true},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"get","owner":{"__rl":true,"value":"={{ $('Config').item.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config').item.repo_name }}","mode":""},"filePath":"={{ $('Config').item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"e73d795e-5071-45df-a23e-b730d075d6cf","name":"Get file data","type":"n8n-nodes-base.github","position":[112,992],"typeVersion":1,"alwaysOutputData":true,"webhookId":"e2218f0e-4f98-4888-adda-772cc9a61ec9","credentials":{"githubOAuth2Api":{"id":"RHPhWd98dwLBsbWA","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=pranitl"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=n8n-automations"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=workflows"}]},"includeOtherFields":true,"options":{}},"id":"8e0b2a2f-a258-485e-9843-a07e19d7defc","name":"Config","type":"n8n-nodes-base.set","position":[112,1280],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"214bf9d8-31ea-4215-8b3e-c3ab4fb16822","triggerCount":0,"tags":[]}